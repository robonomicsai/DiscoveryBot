{"version":3,"sources":["payload.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAcA;;eAEG;YAgBH;gBAAA;gBAiDA,CAAC;gBA9CD;;mBAEG;gBACO,iDAAsB,GAA9B;oBACE,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,OAAO,EAAG,CAAC,KAAK,CAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;oBACrE,EAAE,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC,EAAE,CAAC;oBACZ,CAAC;oBACD,IAAI,UAAU,GAAG,EAAE,CAAC;oBACpB,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC;wBACxC,UAAU,IAAI,MAAM,CAAC;wBACrB,UAAU,IAAI,CAAC,CAAC;wBAChB,MAAM,GAAG,IAAI,CAAC;oBAChB,CAAC;oBACD,MAAM,CAAC,UAAU,CAAC;gBACpB,CAAC;gBAEO,kCAAO,GAAf;oBACE,kHAAkH;oBAClH,mHAAmH;oBACnH,aAAa;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;wBACzB,MAAM,CAAC,EAAE,CAAC;oBACZ,CAAC;oBACD,IAAI,OAAO,GAAY,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBAE9D,OAAO,GAAG,OAAO,CAAC,OAAO,CAAE,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAE,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAE,IAAI,EAAE,MAAM,CAAC,CAAC;oBACxF,OAAO,GAAG,OAAO,CAAC,OAAO,CAAE,wGAAwG,EACjI,UAAU,KAAK;wBACb,IAAI,GAAG,GAAG,QAAQ,CAAC;wBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC;4BACtB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gCACtB,GAAG,GAAG,KAAK,CAAC;4BACd,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,GAAG,GAAG,QAAQ,CAAC;4BACjB,CAAC;wBACH,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC;4BACrC,GAAG,GAAG,SAAS,CAAC;wBAClB,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC/B,GAAG,GAAG,MAAM,CAAC;wBACf,CAAC;wBACD,MAAM,CAAC,eAAe,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC;oBAC5D,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBA/DH;oBAAC,gBAAS,CAAE;wBACV,MAAM,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;wBAC5B,QAAQ,EAAE,SAAS;wBACnB,QAAQ,EAAE,0TAOP;qBACJ,CAAC;;oCAAA;gBAqDF,uBAAC;YAAD,CAjDA,AAiDC,IAAA;YAjDD,+CAiDC,CAAA","file":"payload.js","sourcesContent":["/**\n * (C) Copyright IBM Corp. 2016. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\nimport {Component} from 'angular2/core';\n/*\n * Displays the JSON payload from the user to Watson and from Watson to the client.\n */\n@Component ({\n  inputs: ['payload', 'label'],\n  selector: 'payload',\n  template: `\n    <div>\n        <div class='header-text'>{{ label }}</div>\n        <div class='code-line responsive-columns-wrapper'>\n        <pre class='line-numbers' [innerHtml]='createLineNumberString()'></pre>\n        <pre class='payload-text responsive-column' [innerHtml]='getText()'></pre></div>\n    </div>\n    `\n})\n/*\n * This component is responsible for the Payload section layout inthe right hand side of the mian page.\n */\nexport class PayloadComponent {\n  private payload : Object;\n\n/*\n *Creates line numbers for payload section.\n */\n  private createLineNumberString () {\n    let numberOfLines = (this.getText ().match (/\\n/g) || []).length + 1;\n    if (numberOfLines === 1) {\n      return '';\n    }\n    let lineString = '';\n    let prefix = '';\n    for (let i = 1; i <= numberOfLines; i++) {\n      lineString += prefix;\n      lineString += i;\n      prefix = '\\n';\n    }\n    return lineString;\n  }\n\n  private getText () {\n    // This method will be invoked from the Angular 2.0 component template (above). The component receives a 'payload'\n    // and a 'label' param when initialized. This method is responsible for converting the JSON to a syntax highlighted\n    // text area.\n    if (this.payload == null) {\n      return '';\n    }\n    let convert : string = JSON.stringify (this.payload, null, 2);\n\n    convert = convert.replace (/&/g, '&amp;').replace (/</g, '&lt;').replace (/>/g, '&gt;');\n    convert = convert.replace (/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n      function (match) {\n        let cls = 'number';\n        if (/^\"/.test (match)) {\n          if (/:$/.test (match)) {\n            cls = 'key';\n          } else {\n            cls = 'string';\n          }\n        } else if (/true|false/.test (match)) {\n          cls = 'boolean';\n        } else if (/null/.test (match)) {\n          cls = 'null';\n        }\n        return '<span class=\"' + cls + '\">' + match + '</span>';\n    });\n    return convert;\n  }\n}\n"]}