{"version":3,"sources":["app.component.ts"],"names":[],"mappings":"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","file":"app.component.js","sourcesContent":["/**\n * (C) Copyright IBM Corp. 2016. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\nimport {Component} from 'angular2/core';\nimport {DialogResponse} from './dialog.response';\nimport {DialogService} from './dialog.service';\nimport {Http, Headers} from 'angular2/http';\nimport {CeDocComponent} from './ce.docs';\nimport {PayloadComponent} from './payload';\n\n/*\n * Main entry point to the application. This component is responsible for the entire page layout.\n */\n@Component ({\n  directives: [CeDocComponent, PayloadComponent],\n  providers: [DialogService],\n  selector: 'chat-app',\n  template: `\n  <div id='view-change-button' class='button' (click)='togglePanel($event)'>\n    <img title='Click to Collapse' class='option full' src='../img/Chat Button.png'>\n    <img title='Click to Expand' class='option not-full' src='../img/Code Button.png'>\n  </div>\n  <div id='parent' class='parentDiv' (window:resize)='onResize($event)'>\n      <div id='scrollingChat'>\n        <div id='segments' *ngFor='#segment of segments'>\n          <div [class]='segment.isUser() ? \"from-user\" :\n            (segment !== segments[segments.length - 1] ? \"from-watson\" : \"from-watson-latest\")'>\n            <p class='padding' [innerHtml]='segment.getText()'></p>\n            <div *ngIf='!segment.isUser() && segment.getCe().length>0 && segment !== segments[0]'>\n              <span title='Click to Collapse' (click)='CeToggle($event)' style='border : none;'\n              class='expcoll'>Collapse Results <span class='sign'>-</span></span>\n              <div class='toggleCe'>\n                <ce-doc *ngFor='#doc of segment.getCe()' [doc]='doc'></ce-doc>\n              </div>\n            </div>\n          </div>\n          <div class='clear'></div>\n          <div *ngIf='segment.isUser() && segment == segments[segments.length - 1]' class='load'></div>\n        </div>\n      </div>\n      <div class='right'> <!-- Display the payload to/from Watson -->\n        <div id='payload-column' class='fixed-column content-column'>\n          <payload id='payload-request' class='payload' label='Sent to Watson' [style]='segments.length <= 2 ?\n            \"display : none;\" : \"\"' [payload]='(segments.length > 1 && segments[segments.length - 2].isUser()) ?\n            segments[segments.length - 2].getPayload() : null'></payload>\n          <payload id='payload-response' class='payload' label='Watson understands' [style]='segments.length <= 1 ?\n            \"display : none;\" : \"\"' [payload]='(segments.length > 0 && !segments[segments.length - 1].isUser()) ?\n            segments[segments.length - 1].getPayload() : null'></payload>\n        </div>\n      </div>\n      <footer>\n      <label for='textInput' class='inputOutline'>\n        <input id='textInput' class='input responsive-column' placeholder='Type something' type='text'\n          [(ngModel)]='question' (keydown)='keypressed($event)' style='width:100%'>\n      </label>\n      <div class='draw'></div>\n    </footer>\n  </div>\n    `\n})\nexport class AppComponent {\n  // Store the response so we can display the JSON for end user to see\n  // We will also need to use the response's context for subsequent calls\n\n  private response : any = null;\n  private timer : any = null;\n  private setupTimer : any = null;\n  private question : string = null;\n  private segments : DialogResponse[] = []; // Array of requests and responses\n  private workspace_id : string = null;\n  private langData : any;\n\n  constructor (private _dialogService : DialogService, private http : Http) {\n    this.getLang();\n  }\n/*\n * This method is responsible for detecting user locale and getting locale specific content to be displayed by making a\n * GET request to the respective file.\n */\n  private getLang () {\n    let browserLang = window.navigator.language || window.navigator.userLanguage;\n    let complLang = browserLang.split('-');\n    let lang    = complLang[0];\n    let lang_url = 'locale/' + lang + '.json';\n    this.http.get(lang_url).map(res => res.json()).subscribe(\n      data =>  {\n        this.langData = data;\n        this.segments.push (new DialogResponse (\n          this.langData.Description,\n          false, null, null));\n      },\n      error => {\n        let lang_url = 'locale/en.json';\n        this.http.get(lang_url).map(res => res.json()).subscribe(\n          data =>  {\n            this.langData = data;\n            this.segments.push (new DialogResponse (\n              this.langData.Description,\n            false, null, null));\n          },\n          error => alert (JSON.stringify (error)));\n      });\n  }\n  private ngAfterViewInit (_dialogService : DialogService) {\n    this.checkSetup(_dialogService);\n    let rightColumn = <HTMLElement>document.querySelector ('.right');\n    this.resizePayloadColumn (rightColumn);\n  }\n/*\n * This method is responsible for detecting if the set-up processs involving creation of various Watson services\n * and configuring them is complete. The status is checked every 5 seconds till its complete.\n * A loading screen is displayed to show set-up progress accordingly.\n */\n  private checkSetup (_dialogService : DialogService) {\n    this._dialogService.setup().subscribe (\n      data => {\n        this.workspace_id = data.WORKSPACE_ID;\n        let setup_state = data.setup_state;\n        let setup_status_msg = data.setup_status_message;\n        let setup_phase = data.setup_phase;\n        let setup_message = data.setup_message;\n        let setup_step = data.setup_step;\n        let setup = <HTMLElement>document.querySelector ('.setup');\n        let setup_status = <HTMLElement>document.querySelector ('.setup-msg');\n        let chat_app = <HTMLElement>document.querySelector ('chat-app');\n        let setupLoader = <HTMLElement>document.querySelector ('.setup-loader');\n        let setupPhase = <HTMLElement>document.querySelector ('.setup-phase');\n        let setupPhaseMsg = <HTMLElement>document.querySelector ('.setup-phase-msg');\n        let errorPhase = <HTMLElement>document.querySelector ('.error-phase');\n        let errorPhaseMsg = <HTMLElement>document.querySelector ('.error-phase-msg');\n        let circles = <HTMLElement>document.querySelector ('.circles');\n        let gerror = <HTMLElement>document.querySelector ('.gerror');\n        let werror = <HTMLElement>document.querySelector ('.werror');\n        let activeCircle = <HTMLElement>document.querySelector ('.active-circle');\n        let nactiveCircle = <HTMLElement>document.querySelector ('.non-active-circle');\n        setup_status.innerHTML = setup_status_msg;\n        if (setup_state === 'not_ready') {\n          document.body.style.backgroundColor = 'darkgray';\n          chat_app.style.opacity = '0.25';\n          setup.style.display = 'block';\n          setupPhase.innerHTML = setup_phase;\n          setupPhaseMsg.innerHTML = setup_message;\n          if (setup_step === '0') {\n            errorPhase.innerHTML = setup_phase;\n            errorPhaseMsg.innerHTML = setup_message;\n            setupLoader.style.display = 'none';\n            setupPhase.style.display = 'none';\n            setupPhaseMsg.style.display = 'none';\n            circles.style.display = 'none';\n            if (setup_phase !== 'Error') {\n              werror.style.display = 'block';\n            } else {\n              gerror.style.display = 'block';\n            }\n            errorPhase.style.display = 'block';\n            errorPhaseMsg.style.display = 'block';\n          } else {\n            setupLoader.style.display = 'block';\n            setupPhase.style.display = 'block';\n            setupPhaseMsg.style.display = 'block';\n            circles.style.display = 'block';\n            gerror.style.display = 'none';\n            werror.style.display = 'none';\n            errorPhase.style.display = 'none';\n            errorPhaseMsg.style.display = 'none';\n          }\n          if (setup_step === '2') {\n            activeCircle.classList.remove ('active-circle');\n            activeCircle.classList.add ('non-active-circle');\n            nactiveCircle.classList.remove ('non-active-circle');\n            nactiveCircle.classList.add ('active-circle');\n          }\n          this.setupTimer = setTimeout(() => {\n            this.checkSetup(_dialogService);\n          }, 5000);\n        } else {\n          let payload = {'input': {'text': ''}};\n          let chatColumn = <HTMLElement>document.querySelector ('#scrollingChat');\n          this.callConversationService (chatColumn, payload);\n          document.body.style.backgroundColor = 'white';\n          chat_app.style.opacity = '1';\n          setup.style.display = 'none';\n          if (this.setupTimer) {\n            clearTimeout (this.setupTimer);\n        }\n        }\n      },\n      error => alert (JSON.stringify (error)));\n  }\n  private onResize (event) {\n    let rightColumn = <HTMLElement>document.querySelector ('.right');\n    this.resizePayloadColumn (rightColumn);\n  }\n/*\n * This method is responsible for toggling Expand/Collapse section of CE content.\n */\n  private CeToggle (event) {\n    let targetElement;\n    if (event.srcElement) {\n      targetElement = event.srcElement;\n    } else {\n      targetElement = event.target;\n    }\n    if (targetElement.className === 'sign') {\n      targetElement = targetElement.parentElement;\n    }\n    if (targetElement.innerText.indexOf('Collapse') !== -1) {\n      targetElement.innerHTML = this.langData.EResults + '<span class=sign>+</span>';\n      targetElement.style.border = '';\n      targetElement.title = this.langData.Expand;\n    } else {\n      targetElement.innerHTML = this.langData.CResults + '<span class=sign>-</span>';\n      targetElement.style.border = 'none';\n      targetElement.title = this.langData.Collapse;\n    }\n    let expcoll = <HTMLElement>targetElement.nextElementSibling;\n    if (expcoll && (expcoll.style.display === 'block' || expcoll.style.display === '')) {\n      expcoll.style.display = 'none';\n    } else {\n      expcoll.style.display = 'block';\n    }\n  }\n/*\n * This method is responsible for triggering a request whenever a Enter key is pressed .\n */\n  private keypressed (event) {\n    let element = <HTMLElement>document.querySelector ('.draw');\n    let nw = element.offsetWidth + 7;\n    if (event && event.keyCode === 8) {\n      nw = element.offsetWidth - 7;\n    }\n    if (nw > 360) {\n      nw = 360;\n    }\n    element.style.width = String (nw + 'px');\n    if (event && event.keyCode === 13) {\n      this.sendData ();\n      element.style.width = '0px';\n    }\n  }\n/*\n * This method is responsible for changing the layout of payload section based on screen resolution.\n */\n  private resizePayloadColumn (rightColumn) {\n    if (window.innerWidth < 730) {\n      rightColumn.classList.add ('no-show');\n    } else if (window.innerWidth < 830) {\n      rightColumn.classList.remove ('no-show');\n      rightColumn.style.width = '340px';\n    } else if (window.innerWidth < 860) {\n      rightColumn.classList.remove ('no-show');\n      rightColumn.style.width = '445px';\n    } else if (window.innerWidth < 951) {\n      rightColumn.classList.remove ('no-show');\n      rightColumn.style.width = '395px';\n    } else {\n      rightColumn.classList.remove ('no-show');\n      rightColumn.style.width = '445px';\n    }\n  }\n/*\n * This method is responsible for toggling the payload section to full screen or fixed layout by\n * clicking the Code Expand/Collapse icons at the top right .\n */\n  private togglePanel (event) {\n    let payloadColumn = <HTMLElement>document.querySelector ('#payload-column');\n    let toggleButton = <HTMLElement>document.querySelector ('#view-change-button');\n    let rightColumn = <HTMLElement>document.querySelector ('.right');\n    let element;\n    if (event.srcElement) {\n      element = event.srcElement;\n    } else {\n      element = event.target;\n    }\n    if (toggleButton.classList.contains ('full')) {\n      toggleButton.classList.remove ('full');\n      payloadColumn.classList.remove ('full');\n      this.resizePayloadColumn (rightColumn);\n    } else {\n      rightColumn.classList.remove ('no-show');\n      rightColumn.style.width = '100%';\n      toggleButton.classList.add ('full');\n      payloadColumn.classList.add ('full');\n    }\n  }\n/*\n * This method is responsible for preparing the data to send and call the method for Conversation Service\n */\n  private sendData () {\n    let chatColumn = <HTMLElement>document.querySelector ('#scrollingChat');\n    chatColumn.classList.add ('loading');\n    let q = '';\n    if (this.question != null) {\n      q = this.question;\n    }\n    this.question = '';\n    let context = null;\n    if (this.response != null) {\n      context = this.response.context;\n      // we are going to delete the context variable 'callRetrieveAndRank' before\n      // sending back to the Conversation service\n      if (context && context.callRetrieveAndRank) {\n        delete context.callRetrieveAndRank;\n      }\n    }\n    let input = {'text': q};\n    let payload = {input, context};\n    // Add the user utterance to the list of chat segments\n    this.segments.push (new DialogResponse (q, true, null, payload));\n    // Call the method which calls the proxy for the message api\n    this.callConversationService (chatColumn, payload);\n  }\n\n  /*\n   * This method is responsible for making a request to Conversation service with the corresponding user query.\n   */\n\n  private callConversationService (chatColumn, payload) {\n    let responseText = '';\n    let ce : any = null;\n\n    // Send the user utterance to dialog, also send previous context\n    this._dialogService.message (this.workspace_id, payload).subscribe (\n      data1 => {\n        this.response = data1;\n        if (data1) {\n          if (data1.error) {\n            responseText = data1.error;\n            data1 = this.langData.NResponse;\n          } else if (data1.output) {\n            if (data1.output.CEPayload && data1.output.CEPayload.length > 0) {\n              ce = data1.output.CEPayload;\n              responseText = this.langData.Great;\n\n              if (ce.length === 1 && ce[0].title === 'No results found') {\n                responseText = this.langData.NoResult;\n                ce = null;\n              }\n            } else if (data1.output.text) {\n              if (data1.output.text.length >= 1) {\n                responseText = data1.output.text.join('<br>');\n              }\n              // responseText  data1.output.text.length >= 1 && !data1.output.text[0] ?\n              // data1.output.text.join(' ').trim() : data1.output.text[0]; // tslint:disable-line max-line-length\n            }\n          }\n        }\n        this.segments.push (new DialogResponse (responseText, false, ce, data1));\n        chatColumn.classList.remove ('loading');\n        if (this.timer) {\n          clearTimeout (this.timer);\n        }\n        this.timer = setTimeout (function () {\n         let messages = document.getElementById('scrollingChat').getElementsByClassName('clear');\n         document.getElementById('scrollingChat').scrollTop = messages[messages.length - 1].offsetTop;\n        }, 50);\n        document.getElementById('textInput').focus();\n      },\n      error => {\n        let serviceDownMsg = this.langData.Log;\n        this.segments.push (new DialogResponse (serviceDownMsg, false, ce, this.langData.NResponse));\n        chatColumn.classList.remove ('loading');\n      });\n  }\n}\n"]}